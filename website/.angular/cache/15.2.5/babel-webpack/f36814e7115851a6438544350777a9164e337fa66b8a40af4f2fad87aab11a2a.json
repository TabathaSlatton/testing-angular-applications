{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Component, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material';\nimport { ContactService } from '../shared';\nimport { constants } from './contact-list.constants';\nimport { CONTACTS } from '../shared/data/mock-contacts';\nvar ContactListComponent = /** @class */function () {\n  function ContactListComponent(contactService, router, snackBar) {\n    this.contactService = contactService;\n    this.router = router;\n    this.snackBar = snackBar;\n    this.noContactsFoundMessage = constants.NO_CONTACTS_FOUND_MESSAGE;\n    this.loadingContactsMessage = constants.LOADING_CONTACTS_MESSAGE;\n    this.deletingContactsMessage = constants.DELETING_CONTACTS_MESSAGE;\n    this.deletingContactMessage = constants.DELETING_CONTACT_MESSAGE;\n    this.isLoading = true;\n    this.deletingContacts = false;\n    this.deletingContact = false;\n    this.backupContacts = CONTACTS.slice();\n  }\n  ContactListComponent.prototype.ngOnInit = function () {\n    this.getContacts();\n  };\n  ContactListComponent.prototype.onClick = function (contact) {\n    this.router.navigate(['/contact', contact.id]);\n  };\n  ContactListComponent.prototype.editContact = function (contact) {\n    this.router.navigate(['/edit', contact.id]);\n  };\n  ContactListComponent.prototype.displayDeleteSnackBar = function (contact) {\n    var message = \"\".concat(contact.name, \" deleted.\");\n    var snackConfig = {\n      duration: 2000\n    };\n    var actionLabel = '';\n    this.snackBar.open(message, actionLabel, snackConfig);\n  };\n  ContactListComponent.prototype.deleteContact = function (contact) {\n    var _this = this;\n    this.deletingContact = true;\n    this.displayDeleteSnackBar(contact);\n    this.contactService.delete(contact).then(function () {\n      _this.contacts = _this.contacts.filter(function (c) {\n        return c !== contact;\n      });\n      if (_this.selectedContact === contact) {\n        _this.selectedContact = null;\n      }\n      _this.deletingContact = false;\n    });\n  };\n  ContactListComponent.prototype.deleteContacts = function () {\n    var _this = this;\n    this.deletingContacts = true;\n    this.contacts.forEach(function (contact, index) {\n      _this.contactService.delete(contact);\n      if (index === _this.contacts.length - 1) {\n        _this.getContacts();\n      }\n    });\n  };\n  ContactListComponent.prototype.getContacts = function () {\n    var _this = this;\n    this.isLoading = true;\n    this.contactService.getContacts().then(function (contacts) {\n      _this.isLoading = false;\n      _this.deletingContacts = false;\n      _this.contacts = contacts;\n    });\n  };\n  ContactListComponent.prototype.refreshContacts = function () {\n    var _this = this;\n    this.backupContacts.forEach(function (contact, index) {\n      _this.contactService.post(contact);\n      if (index === _this.backupContacts.length - 1) {\n        _this.getContacts();\n      }\n    });\n  };\n  ContactListComponent.prototype.saveContact = function (contact) {\n    contact.favorite = !contact.favorite;\n    this.contactService.save(contact);\n  };\n  ContactListComponent.prototype.onSelect = function (contact) {\n    this.selectedContact = contact;\n  };\n  var _a;\n  __decorate([Input('contacts'), __metadata(\"design:type\", Array)], ContactListComponent.prototype, \"contacts\", void 0);\n  ContactListComponent = __decorate([Component({\n    selector: 'app-contact-list',\n    templateUrl: './contact-list.component.html',\n    styleUrls: ['./contact-list.component.css'],\n    providers: [MatSnackBar]\n  }), __metadata(\"design:paramtypes\", [ContactService, Router, typeof (_a = typeof MatSnackBar !== \"undefined\" && MatSnackBar) === \"function\" ? _a : Object])], ContactListComponent);\n  return ContactListComponent;\n}();\nexport { ContactListComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}