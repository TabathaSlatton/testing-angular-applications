{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Directive, ElementRef, Input, HostListener, Renderer } from '@angular/core';\nimport { constants } from './favorite-icon.constants';\n/**\n * FavoriteIconDirective\n * =====================\n * The FavoriteIconDirective takes in a boolean and applies a star depending\n * to the element depending on whether the boolean is true or false. If the\n * boolean is false, when the element is rolled over a outlined star appears,\n * otherwise a star with the primary color will show up. The default primary\n * color is gold. You can set the primary star color by specifying the second\n * optional color parameter.\n *\n * Usage:\n * <element [appFavoriteIcon]=\"expression\"></element>\n *\n * Example:\n * <i [appFavoriteIcon]=\"contact.favorite\"></i>\n *\n *\n * Color (optional)\n * ---------------------------------\n * The second parameter is the color of the star.\n *\n * Usage:\n * <element [appFavoriteIcon]=\"expression\" [color]=\"'color'\"></element>\n *\n * Example:\n * <i [appFavoriteIcon]=\"contact.favorite\" [color]=\"'blue'></i>\n */\nvar FavoriteIconDirective = /** @class */function () {\n  function FavoriteIconDirective(element, renderer) {\n    this._primaryColor = 'gold';\n    this._starClasses = constants.classes;\n    this.element = element.nativeElement;\n    this.renderer = renderer;\n  }\n  Object.defineProperty(FavoriteIconDirective.prototype, \"color\", {\n    set: function (primaryColorName) {\n      if (primaryColorName) {\n        this._primaryColor = primaryColorName.toLowerCase();\n        this.setSolidColoredStar();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  FavoriteIconDirective.prototype.ngOnInit = function () {\n    if (this.isFavorite) {\n      this.setSolidColoredStar();\n    } else {\n      this.setWhiteSolidStar();\n    }\n  };\n  FavoriteIconDirective.prototype.onMouseEnter = function () {\n    if (!this.isFavorite) {\n      this.setBlackOulineStar();\n    }\n  };\n  FavoriteIconDirective.prototype.onMouseLeave = function () {\n    if (!this.isFavorite) {\n      this.setWhiteSolidStar();\n    }\n  };\n  FavoriteIconDirective.prototype.onClick = function () {\n    this.isFavorite = !this.isFavorite;\n    if (this.isFavorite) {\n      this.setSolidColoredStar();\n    } else {\n      this.setBlackOulineStar();\n    }\n  };\n  FavoriteIconDirective.prototype.setBlackOulineStar = function () {\n    this.setStarColor('black');\n    this.setStarClass('outline');\n  };\n  FavoriteIconDirective.prototype.setSolidColoredStar = function () {\n    this.setStarColor(this._primaryColor);\n    this.setStarClass('solid');\n  };\n  FavoriteIconDirective.prototype.setWhiteSolidStar = function () {\n    this.setStarColor('white');\n    this.setStarClass('solid');\n  };\n  FavoriteIconDirective.prototype.setStarClass = function (starType) {\n    var className = this.getStarClasses(starType);\n    this.renderer.setElementAttribute(this.element, 'class', className);\n  };\n  FavoriteIconDirective.prototype.setStarColor = function (color) {\n    this.renderer.setElementStyle(this.element, 'color', color);\n  };\n  FavoriteIconDirective.prototype.getStarClasses = function (starType) {\n    var classNames = '';\n    switch (starType) {\n      case 'solid':\n        classNames = this._starClasses.SOLID_STAR;\n        break;\n      case 'outline':\n        classNames = this._starClasses.OUTLINE_STAR;\n        break;\n      default:\n        classNames = this._starClasses.SOLID_STAR;\n    }\n    return classNames;\n  };\n  var _a;\n  __decorate([Input('appFavoriteIcon'), __metadata(\"design:type\", Boolean)], FavoriteIconDirective.prototype, \"isFavorite\", void 0);\n  __decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], FavoriteIconDirective.prototype, \"color\", null);\n  __decorate([HostListener('mouseenter'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FavoriteIconDirective.prototype, \"onMouseEnter\", null);\n  __decorate([HostListener('mouseleave'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FavoriteIconDirective.prototype, \"onMouseLeave\", null);\n  __decorate([HostListener('click'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], FavoriteIconDirective.prototype, \"onClick\", null);\n  FavoriteIconDirective = __decorate([Directive({\n    selector: '[appFavoriteIcon]'\n  }), __metadata(\"design:paramtypes\", [ElementRef, typeof (_a = typeof Renderer !== \"undefined\" && Renderer) === \"function\" ? _a : Object])], FavoriteIconDirective);\n  return FavoriteIconDirective;\n}();\nexport { FavoriteIconDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}