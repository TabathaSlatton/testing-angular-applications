{"ast":null,"code":"import { TemplateRef, ViewContainerRef } from '@angular/core';\nimport * as i0 from \"@angular/core\";\n/**\n * ShowContactsDirective\n * =====================\n * The ShowContactsDirective takes in a boolean and will remove or add\n * an element to the DOM whether the boolean is true or false. The\n * implementation of the ShowContactsDirective is almost exactly what ngIf\n * does. This directive is only to demonstrate how a structural directive\n * works. It should not be used in production.\n *\n * Usage:\n * <element *appFavoriteIcon=\"boolean expression\"></element>\n *\n * Example:\n * <div *appShowContacts=\"contacts.length\"></div>\n */\nvar ShowContactsDirective = /** @class */function () {\n  function ShowContactsDirective(templateRef, viewContainer) {\n    this.templateRef = templateRef;\n    this.viewContainer = viewContainer;\n  }\n  Object.defineProperty(ShowContactsDirective.prototype, \"appShowContacts\", {\n    set: function (shouldShow) {\n      if (shouldShow) {\n        this.viewContainer.createEmbeddedView(this.templateRef);\n      } else {\n        this.viewContainer.clear();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ShowContactsDirective.ɵfac = function ShowContactsDirective_Factory(t) {\n    return new (t || ShowContactsDirective)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n  };\n  ShowContactsDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ShowContactsDirective,\n    selectors: [[\"\", \"appShowContacts\", \"\"]],\n    inputs: {\n      appShowContacts: \"appShowContacts\"\n    }\n  });\n  return ShowContactsDirective;\n}();\nexport { ShowContactsDirective };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}