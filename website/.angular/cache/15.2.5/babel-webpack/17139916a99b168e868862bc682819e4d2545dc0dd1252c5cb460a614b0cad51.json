{"ast":null,"code":"import { PhoneNumber } from './phone-number.model';\nimport { phoneNumberErrorMessages } from './phone-number-error-messages';\nimport * as i0 from \"@angular/core\";\n/**\n * PhoneNumberPipe\n * ===============\n * The PhoneNumberPipe takes in a string or a number and transforms that input\n * into a formatted format. The format is optional and if it is not entered as\n * a parameter then the number will be formatted using the (XXX) XXX-XXXX format\n * by default. there is a format based on the format (optional) and country\n * code (optional). If the format is not entered, the number will be formatted\n * using the (XXX) XXX-XXXX format by default.\n *\n * The PhoneNumberPipe currently only supports phone numbers\n * in the North American Numbering Plan. Please see\n * https://en.wikipedia.org/wiki/North_American_Numbering_Plan for details.\n *\n * No parameters\n * -------------\n * Not specifying a format parameter will result in the pipe transforming the\n * value into a default phone format, which is (XXX) XXX-XXXX.\n *\n * Usage:\n * {{ <phone number> | phoneNumber }}\n *\n * Example:\n * {{ 7035551234 | phoneNumber }}\n * (703) 555-1234\n *\n * Phone Number Format Parameter (optional)\n * ----------------------------------------\n * The first parameter is the phone format which is optional. If there is no\n * format entered, then the default format, (XXX) XXX- XXXX, will be used.\n * Acceptable parameters are \"default\", \"dots\", \"hyphens\". The phone number\n * parameter is case insensitive.\n *\n * Usage:\n * {{ <phone number> | phoneNumber : <format-type> }}\n *\n * Examples:\n * {{ 7035551234 | phoneNumber : \"default\" }}\n * (703) 555-1234\n *\n * {{ 7035551234 | phoneNumber : \"DOTS\" }}\n * 703.555.1234\n *\n * {{ 7035551234 | phoneNumber : \"hyphens\" }}\n * 703-555-1234\n *\n * Country Code Parameter (optional)\n * ---------------------------------\n * The second parameter is the country code. Any valid two character country\n * code that uses the North American Numbering Plan is acceptable. To see a list\n * of countries that use the North American Numbering Plan see\n * https://en.wikipedia.org/wiki/North_American_Numbering_Plan. To find their\n * respective two character country code please see:\n * http://www.worldatlas.com/aatlas/ctycodes.htm. The country code parameter is\n * case insensitive.\n *\n * Usage:\n * {{ <phone number> | phoneNumber : <format-type> : <country-code> }}\n *\n * Example:\n * {{ 7035551234 | phoneNumber : \"DOTS\" : \"US\" }}\n * +1 703.555.1234\n *\n * Allow Empty String (optional)\n * ---------------------------------\n * Using this third parameter you can allow empty strings without throwing an\n * exception.\n *\n * Usage:\n * {{ <phone number> | phoneNumber : <format-type> : <country-code> : <boolean> }}\n *\n * Example:\n * {{ 7035551234 | phoneNumber : \"DOTS\" : \"US\" : true }}\n*/\nvar PhoneNumberPipe = /** @class */function () {\n  function PhoneNumberPipe() {}\n  PhoneNumberPipe.prototype.transform = function (value, format, countryCode, allowEmptyString) {\n    if (value === void 0) {\n      value = '';\n    }\n    if (countryCode === void 0) {\n      countryCode = '';\n    }\n    var phoneNumber = null;\n    var formattedPhoneNumber = '';\n    if (allowEmptyString && value === '') {\n      return '';\n    }\n    if (this.isPhoneNumberValid(value)) {\n      phoneNumber = new PhoneNumber(value);\n      formattedPhoneNumber = phoneNumber.getFormattedPhoneNumber(format, countryCode);\n    }\n    return formattedPhoneNumber;\n  };\n  PhoneNumberPipe.prototype.isPhoneNumberValid = function (phoneNumber) {\n    var VALID_PHONE_LENGTH = 10;\n    var isPhoneNumberValid = false;\n    if (isNaN(phoneNumber)) {\n      console.error(phoneNumberErrorMessages.INVALID_PHONE_NUMBER_TYPE_ERR);\n    } else if (phoneNumber.toString().length !== VALID_PHONE_LENGTH) {\n      console.error(phoneNumberErrorMessages.INVALID_PHONE_NUMBER_LENGTH_ERR);\n    } else {\n      isPhoneNumberValid = true;\n    }\n    return isPhoneNumberValid;\n  };\n  PhoneNumberPipe.ɵfac = function PhoneNumberPipe_Factory(t) {\n    return new (t || PhoneNumberPipe)();\n  };\n  PhoneNumberPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n    name: \"phoneNumber\",\n    type: PhoneNumberPipe,\n    pure: true\n  });\n  return PhoneNumberPipe;\n}();\nexport { PhoneNumberPipe };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}